openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /orders/api/payments/:
    get:
      operationId: orders_api_payments_list
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
          description: ''
    post:
      operationId: orders_api_payments_create
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /orders/api/payments/{id}/:
    get:
      operationId: orders_api_payments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: orders_api_payments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: orders_api_payments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: orders_api_payments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /orders/api/shippings/:
    get:
      operationId: orders_api_shippings_list
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shipping'
          description: ''
    post:
      operationId: orders_api_shippings_create
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shipping'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shipping'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipping'
          description: ''
  /orders/api/shippings/{id}/:
    get:
      operationId: orders_api_shippings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shipping.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipping'
          description: ''
    put:
      operationId: orders_api_shippings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shipping.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shipping'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shipping'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipping'
          description: ''
    patch:
      operationId: orders_api_shippings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shipping.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShipping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShipping'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShipping'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipping'
          description: ''
    delete:
      operationId: orders_api_shippings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shipping.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /orders/cart-items/:
    get:
      operationId: orders_cart_items_retrieve
      description: API view to create and retrieve cart items for the authenticated
        user.
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: orders_cart_items_create
      description: API view to create and retrieve cart items for the authenticated
        user.
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /orders/orders/:
    get:
      operationId: orders_orders_list
      description: API view to retrieve and create orders for the authenticated user.
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: orders_orders_create
      description: API view to retrieve and create orders for the authenticated user.
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /products/api/category/:
    get:
      operationId: products_api_category_list
      description: ViewSet for category
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: products_api_category_create
      description: ViewSet for category
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /products/api/category/{id}/:
    get:
      operationId: products_api_category_retrieve
      description: ViewSet for category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: products_api_category_update
      description: ViewSet for category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: products_api_category_partial_update
      description: ViewSet for category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: products_api_category_destroy
      description: ViewSet for category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /products/api/items/:
    get:
      operationId: products_api_items_list
      description: ViewSet for product
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: products_api_items_create
      description: ViewSet for product
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/api/items/{id}/:
    get:
      operationId: products_api_items_retrieve
      description: ViewSet for product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: products_api_items_update
      description: ViewSet for product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_api_items_partial_update
      description: ViewSet for product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_api_items_destroy
      description: ViewSet for product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /products/api/items/by-category/{category_id}/:
    get:
      operationId: products_api_items_by_category_retrieve
      description: ViewSet for product
      parameters:
      - in: path
        name: category_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /users/api/user/info/:
    get:
      operationId: users_api_user_info_retrieve
      description: Get user information
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/login:
    post:
      operationId: users_login_create
      description: Obtain JWT token for user authentication
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /users/register:
    post:
      operationId: users_register_create
      description: Register a new user
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/token/refresh/:
    post:
      operationId: users_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Category:
      type: object
      description: Serializer for category
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    CustomTokenObtainPair:
      type: object
      description: Serializer for JWT authentication.
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Order:
      type: object
      description: Serializer for Order
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - id
      - total_price
      - user
    PatchedCategory:
      type: object
      description: Serializer for category
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPayment:
      type: object
      description: Serializer for Payment
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        payment_date:
          type: string
          format: date-time
          readOnly: true
    PatchedProduct:
      type: object
      description: Serializer for product
      properties:
        id:
          type: integer
          readOnly: true
        category:
          type: integer
        name:
          type: string
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
        image:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedShipping:
      type: object
      description: Serializer for Shipping
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
        shipping_address:
          type: string
        tracking_number:
          type: string
          nullable: true
          maxLength: 255
        status:
          $ref: '#/components/schemas/ShippingStatusEnum'
        estimated_delivery_date:
          type: string
          format: date-time
    Payment:
      type: object
      description: Serializer for Payment
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        payment_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - id
      - order
      - payment_date
      - payment_method
    PaymentMethodEnum:
      enum:
      - credit_card
      - debit_card
      - net_banking
      - wallet
      type: string
      description: |-
        * `credit_card` - Credit Card
        * `debit_card` - Debit Card
        * `net_banking` - Net Banking
        * `wallet` - Wallet
    PaymentStatusEnum:
      enum:
      - pending
      - completed
      - failed
      type: string
      description: |-
        * `pending` - Pending
        * `completed` - Completed
        * `failed` - Failed
    Product:
      type: object
      description: Serializer for product
      properties:
        id:
          type: integer
          readOnly: true
        category:
          type: integer
        name:
          type: string
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
        image:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - category
      - created_at
      - id
      - name
      - price
      - quantity
      - updated_at
    Shipping:
      type: object
      description: Serializer for Shipping
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
        shipping_address:
          type: string
        tracking_number:
          type: string
          nullable: true
          maxLength: 255
        status:
          $ref: '#/components/schemas/ShippingStatusEnum'
        estimated_delivery_date:
          type: string
          format: date-time
      required:
      - estimated_delivery_date
      - id
      - order
      - shipping_address
    ShippingStatusEnum:
      enum:
      - processing
      - shipped
      - delivered
      type: string
      description: |-
        * `processing` - Processing
        * `shipped` - Shipped
        * `delivered` - Delivered
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
